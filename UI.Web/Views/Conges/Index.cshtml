@model IEnumerable<ApplicationCore.Domain.Conges>

@inject ApplicationCore.Interfaces.IServiceEmployees se
@inject ApplicationCore.Interfaces.IServiceFonctionEmployee sfe


@{
    bool shouldHideDiv = true;
    bool shouldHideDivAdmin = true;

    string mail = User.Identity.Name;
    var employee = se.GetMany().FirstOrDefault(e => e.Email == mail);
    if (employee == null)
    {
        shouldHideDiv = true;
    }
    else
    {
        var fonction = sfe.GetById(employee.FonctionEmployeeFk);
        if (fonction.Fonction == "Responsable") { shouldHideDiv = false; }
        else shouldHideDiv = true;
    }
    if (employee == null)
    {
        {
            // Replace "Administrateur" with the actual role name you want to check
            if (User.IsInRole("Administrateur"))
            {

                shouldHideDivAdmin = false;
            }
        }
        ViewData["Title"] = "UNIVERS-MED  - La liste de tous Conges";
}}

<h4>La liste de tous les congés</h4>
<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">


</head>
<p>
    <a asp-action="Create" class="btn btn-primary">Créer une nouvelle demande de congé</a>
</p>
<body>

<table class="table" id="myTable">
    <!-- Table headers -->
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.DateDebut)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateFin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TypeConges.Designation)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Raison)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IdEmployees)
            </th>
                <th>
                    @Html.DisplayNameFor(model => model.ConfirmePar)
                </th>
            
            <th>
                @Html.DisplayNameFor(model => model.RemplassePar)
            </th>
                <th>Nécessité d'une contre visite</th>
            <th>
                @Html.DisplayNameFor(model => model.TypeConfirmation.type)
            </th>
            <th>Actions</th>

            


            <th>PDF</th>
        </tr>
    </thead>
    <tbody>
            @foreach (var item in Model)
            {
                <!-- Table rows -->
                @if (item != null)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.FormattedDateDebut)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FormattedDateFin)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.TypeConges.Designation)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Raison)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Employees.Nom)
                        </td>

                        <td>
                            @if (item.ConfirmeParEmployee != null)
                            {
                                @Html.DisplayFor(modelItem => item.ConfirmeParEmployee.Nom)
                            }
                            else
                            {
                                <span>----------</span>
                            }
                        </td>
                        <td>
                            @if (item.RemplasseParEmployee != null)
                            {
                                @Html.DisplayFor(modelItem => item.RemplasseParEmployee.Nom)
                            }
                            else
                            {
                                <span>----------</span>
                            }
                        </td>
                        <td>
                            @if (item.TypeConges != null && item.TypeConges.NeedsCv)
                            {
                                <input type="checkbox" checked disabled />
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TypeConfirmation.type)
                        </td>
                        
                        <td>
                            @Html.ActionLink("Modifier", "Edit", new { id = item.CongesId })|
                            @Html.ActionLink("Confirmation", "Configure", new { id = item.CongesId })|
                            @Html.ActionLink("Supprimer", "Delete", new { id = item.CongesId })
                        </td>
                        <td>
                            @if (item.TypeConfirmation.type == "Confirmed")
                            {
                                <a asp-action="DownloadPdf" asp-route-id="@item.CongesId" class="btn btn-success">Télécharger le PDF</a>
                            }
                        </td>
                    </tr>
                    
                }
            }

    </tbody>
</table>
</body>
<style>
    .filter-form {
        margin-bottom: 20px;
        display: flex;
        align-items: center;
    }

        .filter-form label {
            margin-right: 10px;
            font-weight: bold;
        }

        .filter-form select {
            padding: 4px;
            border-radius: 4px;
        }

    .filter-button {
        padding: 6px 12px;
        font-size: 14px;
        font-weight: bold;
        color: #fff;
        background-color: #007bff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        .filter-button:hover {
            background-color: #0069d9;
        }

    .update-confirmation-btn {
        padding: 8px 16px;
        background-color: #4CAF50;
        color: #fff;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        .update-confirmation-btn:hover {
            background-color: #45a049;
        }

   
    .active {
        background-color: #4CAF50;
        color: white;
        border-radius: 20px; /* Adjust the value to control the roundness */
        padding: 8px 16px; /* Adjust padding for spacing */
        transition: background-color 0.3s, color 0.3s; /* Add smooth transition */
    }

    /* Add a hover effect for the navigation links */
    .nav-link:hover {
        background-color: #eee;
        color: #333;
        border-radius: 20px;
        transition: background-color 0.3s, color 0.3s;
    }

</style>



<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>



<script>
    $(document).ready(function () {
        if (!$.fn.DataTable.isDataTable('#myTable')) {
            $('#myTable').DataTable({
                scrollX: true,
                fixedHeader: true,
                // Other DataTables options you might want to configure
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.6/i18n/fr-FR.json',
                },
            });
        }
    });</script>
