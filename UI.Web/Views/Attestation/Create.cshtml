@model ApplicationCore.Domain.Attestation
@inject ApplicationCore.Interfaces.IServiceEmployees se
@inject ApplicationCore.Interfaces.IServiceTypeAttestation sta
@{
    ViewData["Title"] = "Create";
}
@{
    string mail = User.Identity.Name;
    var employee = se.GetMany().FirstOrDefault(e => e.Email == mail);
}
<h4>
    Créer
    Attestation
</h4>
<h4>Attestation</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            





            <div class="form-group">
                <label asp-for="DocumentAttestation" class="control-label">
                    Upload Signature<span class="text-danger">*</span>
                </label>
                <input type="file" name="DocumentUpload" class="form-control" />
                <span asp-validation-for="DocumentAttestation" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TypeAttestation" class="control-label">
                    Type de l'attestation<span class="text-danger">*</span>
                </label>
                <select asp-for="TypeAttestationFk" class="form-control" asp-items="ViewBag.TypeAttestation"></select>
                <span asp-validation-for="TypeAttestationFk" class="text-danger"></span>
            </div>


            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="IndexFront">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
